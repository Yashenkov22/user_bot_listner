import re
import asyncio
import pytz

from datetime import timedelta, datetime

from telethon import TelegramClient, events
from telethon import types

api_id = 25430288
api_hash = "08616908140d6688f2e0107805741d9d"
# session_name = "my_userbot"

loop = asyncio.get_event_loop()

client = TelegramClient('./telethon_userbot.session',
                        api_id=api_id,
                        api_hash=api_hash,
                        loop=loop)

moscow_tizone = pytz.timezone('Europe/Moscow')


# PATTERNS = [
#     r"\b–æ–±–º–µ–Ω\w*\b",
#     r"\b–∫—É—Ä—Å\w*\b",
#     r"\b–≤–∞–ª—é—Ç\w*\b",
#     r"\b–¥–µ–Ω–µ–≥\b",
#     r"\b–¥–µ–Ω—å–≥\w*\b",
#     r"\b–Ω–∞–ª–∏—á\w*\b",
#     # r"\b—Å–∫—Ä–∏–Ω–∏–Ω–≥\w*\b",
# ]

PATTERNS = {
    '–æ–±–º–µ–Ω': r"\b–æ–±–º–µ–Ω\w*\b",
    '–∫—É—Ä—Å': r"\b–∫—É—Ä—Å\w*\b",
    '–≤–∞–ª—é—Ç': r"\b–≤–∞–ª—é—Ç\w*\b",
    '–¥–µ–Ω–µ–≥': r"\b–¥–µ–Ω–µ–≥\b",
    '–¥–µ–Ω—å–≥': r"\b–¥–µ–Ω—å–≥\w*\b",
    '–Ω–∞–ª–∏—á': r"\b–Ω–∞–ª–∏—á\w*\b",
    'usdt': r"\busdt\w*\b",
    '—é—Å–¥—Ç': r"\b—é—Å–¥—Ç\w*\b",
    'trc20': r"\btrc20\w*\b",
    # '$': r"\$",
    '–¥–æ–ª–ª–∞—Ä—ã': r"\b–¥–æ–ª–ª–∞—Ä—ã\w*\b",
    '–±–∞–∫—Å—ã': r"\b–±–∞–∫—Å—ã\w*\b",
    '—Ä—É–±': r"\b—Ä—É–±\w*\b",
    'rub': r"\brub\w*\b",
    '–ª–∏—Ä—ã': r"\b–ª–∏—Ä—ã\w*\b",
}


@client.on(events.NewMessage)
async def listen_any_message(event):
    asyncio.create_task(process_event(event))


async def process_event(event):
    text = event.raw_text.lower()
    # msg = event.message

    if event.sender.bot:
        return

    chat_to = '@test_userbot22'

    for pattern_word, pattern in PATTERNS.items():
        try:
            # print(f'–ø—Ä–æ–≤–µ—Ä—è—é {pattern_word}...')
            if re.search(pattern, text):
                # print('—É—Å–ø–µ—à–Ω–æ')

                user_data = event.sender

            # print('user', user_data)
                chat: types.Channel = event.chat

                chat_username = chat.username
                chat_name = chat.title

                try:
                    reply_to = event.message.reply_to
                    # print('REPLY TO ', reply_to)
                    topic_id = reply_to.reply_to_top_id

                    if topic_id is None:
                        raise Exception()
                    
                except Exception as ex:
                    print(ex)
                    try:
                        topic_id = reply_to.reply_to_msg_id
                    except Exception as ex:
                        print(ex)
                        topic_id = None

            # print('topic_id',topic_id)

                message_date = event.date + timedelta(hours=3)

                name = None

                if user_data:
                    username = user_data.username
                    first_name = user_data.first_name
                    last_name = user_data.last_name

                    name = username or first_name or last_name or f'–ò–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, id {user_data.id}'

                if name is None:
                    name = f'–ò–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

                print(f'***\n–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {chat_name}\n\n–í—Ä–µ–º—è: {datetime.now(tz=moscow_tizone)}\n***\n')

                user_id_link = f'tg://user?id={user_data.id}'

                _text = f'üîî –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ <a href="https://t.me/{chat_username}">{chat_name}</a>\n\n–ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É: {pattern_word}\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n<pre>\n{event.raw_text}</pre>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {name}\n–í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è: {message_date.strftime("%d.%m.%Y %H:%M")}\n\n–°—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n- –ø–æ id: {user_id_link}'
                
                if user_data.username:
                    username_link = f'https://t.me/{user_data.username}'
                    _text += f'\n- –ø–æ username: {username_link}'

                if topic_id:
                    url = f"https://t.me/{chat_username}/{topic_id}/{event.message.id}"
                else:
                    url = f"https://t.me/{chat_username}/{event.message.id}"

                _text += f'\n\n<a href="{url}"><b>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</b></a>'

                await client.send_message(chat_to,
                                        _text,
                                        parse_mode='HTML',
                                        link_preview=False)
                break
        except Exception as ex:
            print(ex)
            continue


client.start()

print('--- START USER BOT...')

client.run_until_disconnected()
