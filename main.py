import re
import asyncio
import pytz

from datetime import timedelta, datetime

from telethon import TelegramClient, events
from telethon import types

api_id = 25430288
api_hash = "08616908140d6688f2e0107805741d9d"
# session_name = "my_userbot"

loop = asyncio.get_event_loop()

client = TelegramClient('./telethon_userbot.session',
                        api_id=api_id,
                        api_hash=api_hash,
                        loop=loop)

moscow_tizone = pytz.timezone('Europe/Moscow')


# PATTERNS = [
#     r"\b–æ–±–º–µ–Ω\w*\b",
#     r"\b–∫—É—Ä—Å\w*\b",
#     r"\b–≤–∞–ª—é—Ç\w*\b",
#     r"\b–¥–µ–Ω–µ–≥\b",
#     r"\b–¥–µ–Ω—å–≥\w*\b",
#     r"\b–Ω–∞–ª–∏—á\w*\b",
#     # r"\b—Å–∫—Ä–∏–Ω–∏–Ω–≥\w*\b",
# ]

PATTERNS = {
    '–æ–±–º–µ–Ω': r"\b–æ–±–º–µ–Ω\w*\b",
    '–∫—É—Ä—Å': r"\b–∫—É—Ä—Å\w*\b",
    '–≤–∞–ª—é—Ç–∞': r"\b–≤–∞–ª—é—Ç\w*\b",
    # '–¥–µ–Ω–µ–≥': r"\b–¥–µ–Ω–µ–≥\b",
    '–¥–µ–Ω—å–≥–∏': r"\b–¥–µ–Ω—å–≥–∏\w*\b",
    '–Ω–∞–ª–∏—á–Ω—ã–µ': r"\b–Ω–∞–ª–∏—á–Ω—ã–µ\w*\b",
    # 'usdt': r"\busdt\w*\b",
    # '—é—Å–¥—Ç': r"\b—é—Å–¥—Ç\w*\b",
    # 'trc20': r"\btrc20\w*\b",
    # '$': r"\$",
    # '–¥–æ–ª–ª–∞—Ä—ã': r"\b–¥–æ–ª–ª–∞—Ä—ã\w*\b",
    # '–±–∞–∫—Å—ã': r"\b–±–∞–∫—Å—ã\w*\b",
    # '—Ä—É–±': r"\b—Ä—É–±\w*\b",
    # 'rub': r"\brub\w*\b",
    # '–ª–∏—Ä—ã': r"\b–ª–∏—Ä—ã\w*\b",
}

# BLACK_LIST_PATTERNS = (
#     r"\b–ø–∏—à–∏ –≤ –ª–∏—á–∫—É\w*\b",
#     r"\b–ø–∏—à–∏ –≤ –ªc\w*\b",
#     r"\b–ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\w*\b",
#     r"\b–≤—ã–∫—É–ø–∞–µ–º\w*\b",
#     r"\b–±—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∑–∞ —Ä–µ–ø–æ—Å—Ç\w*\b",
#     r"\b–∂–¥—É –≤–∞—Å –≤ ‚Äì –ª—Å\w*\b",
#     r"\b–ø–∏—à–∏ –º–Ω–µ \"+\"\w*\b",
#     r"\b–∫—É–ø–∏–º –≤–∞—à\w*\b",
#     r"\b–∫—É—Ä—Å –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è\w*\b",
#     r"\b–ª—É—á—à–∏–π –∫—É—Ä—Å\w*\b",

# )


BLACK_LIST_PATTERNS = (
    r"–ø–∏—à–∏ –≤ –ª–∏—á–∫—É",
    r"–ø–∏—à–∏ –≤ –ª—Å",
    r"–ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
    r"–≤—ã–∫—É–ø–∞–µ–º",
    r"–±—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∑–∞ —Ä–µ–ø–æ—Å—Ç",
    r"–∂–¥—É –≤–∞—Å –≤\s*‚Äì?\s*–ª—Å",
    r'–ø–∏—à–∏ –º–Ω–µ\s*"\+"',
    r"–∫—É–ø–∏–º –≤–∞—à",
    r"–∫—É—Ä—Å –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è",
    r"–ø–∏—à–∏—Ç–µ –≤ –ª—Å",
    r"–ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–∫—É",
    r"—Å–∫—É–ø–∞—é —é—Å–¥—Ç",
    r"—Å–∫–∞–º–µ—Ä–∞–º –Ω–µ –ø–∏—Å–∞—Ç—å",
    r"–∏—â—É –æ–±–º–µ–Ω",
    r"–ª–∏—á–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞",
    r"–æ—Ñ–∏—Å –∏–ª–∏ –≤—Å—Ç—Ä–µ—á–∞",
    r"tether",
    r"–ª–∏—á–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞",
    r"–≤ –ª—Å",
    r"–ø–æ–º–æ–∂–µ–º —Å",
    r"–ø–∏c–∞—Ç—å –≤ –ª—Å",
    r"–¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É",
    r"exchange",
    r"–∫—ç—à",
    r"—Ç—Ä–∞—Ö–∞—é—Å—å",
    r"—Å–µ–∫—Å",
    r"–ø—Ä–∏ –ª–∏—á–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ",
    r"–ø—Ä–∏–±—ã–ª—å",
    r"–ø–æ —Ö–æ—Ä–æ—à–µ–π —Ü–µ–Ω–µ",
    r"–≤—ã–∫—É–ø–∞—é",
    r"—Å–º–æ–∂–µ—Ç –ø—Ä–æ–¥–∞—Ç—å",

    r"–æ–±–º–µ–Ω –∫—Äu–ø—Ç—ã –ª–∏—á–Ω–æ",
    r"–≤—ã–≥o–¥–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ",
    r"–ø–∏c–∞—Ç—å –≤ –ª—Å",
    r"–ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é usdt",
    r"–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
    r"—Å—Ä–æ—á–Ω–æ –ø–æ–∫—É–ø–∞–µ–º usdt",
    r"–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç usdt",
    r"–≤—Å—ë –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ",
    r"–ø—Ä–µ–¥–ª–∞–≥–∞—é —Ö–æ—Ä–æ—à–∏–π –∫—É—Ä—Å",
    r"—Ä–∞–±–æ—Ç–∞—é –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É",
    r"—Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–µ—á–∞",
    r"–≤ –∫—É—Ä—Å–µ",
    r"—Ö–æ—Ä–æ—à–µ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π",
    r"–∫—É–ø–ª—é usdt –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ",
    r"–ø–æ–∫—É–ø–∫–∞ usdt –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ",
    r"—Ä–µ–∞–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞",
    r"–±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
    r"–∏–¥–µ—Ç –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã",
    r"–∫—Ä–∏–ø—Ç–æ–∂–∞—Ä–∞",
    r"–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥",

    r"–ø–æ–∫—É–ø–∞—é usdt —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏",
    r"–±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π",
    r"–±–µ–∑ –æ–±–º–∞–Ω–∞ –∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç",
    r"–ø–∏—à–∏—Ç–µ, –æ–±—Å—É–¥–∏–º",
    r"whatsapp",
    r"–∫—É–ø–ª—é —é—Å–¥—Ç –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ",
    r"—Ö–æ—á–µ—à—å –æ–±–º–µ–Ω—è—Ç—å usdt",
    r"—Å–≤—è–∑—å –≤ –ª\.—Å\.",

    r"—Å–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ",
    r"—Å—Ç–æ–ª –≤ —Å—Ç–æ–ª",
    r"–∫—É—Ä—Å –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è",
    r"—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –ø–æ–∫—É–ø–∫—É usdt",
    r"—Å–∫—É–ø–∞–µ–º usdt",
    r"–±–µ–∑ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç –∏ –∫–æ–º–∏—Å—Å–∏–π",
    r"–º–æ–≥—É –≤—ã–¥–∞—Ç—å –Ω–∞–ª–∏—á–Ω—ã–µ",

    r"—Å–¥–µ–ª–∞–µ–º –≤—Å–µ –±—ã—Å—Ç—Ä–æ",
    r"–ø–µ—Ä–µ–≤–æ–¥ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏",
    r"–æ–±–º–µ–Ω—è—é —é—Å–¥—Ç –Ω–∞ –Ω–∞–ª–∏—á–∫—É",
    r"–¥–æ—Å—Ç–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
    r"–∫—É—Ä—Å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—å–µ–º–∞",
    r"–Ω–∏–∫–∞–∫–∏—Ö –ø–µ—Ä–µ–ø–ª–∞—Ç",
    r"–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –∏ –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö",

    r"–¥–ª—è –æ–±–º–µ–Ω–∞ –ø–∏—à–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É",
    r"–ø–æ–∫—É–ø–∞—é —é—Å–¥—Ç –ø–æ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–º—É –∫—É—Ä—Å—É",
    r"–≥–æ—Ç–æ–≤ –Ω–∞ –æ–±–º–µ–Ω",
    r"—Ä–∞–±–æ—Ç–∞—é 24/7",
    r"—Ä–∞–±–æ—Ç–∞–µ–º –±—ã—Å—Ç—Ä–æ",
    r"–∫—É–ø–∏—Ç—å —é—Å–¥—Ç –ø–æ —Ö–æ—Ä–æ—à–µ–º—É –∫—É—Ä—Å—É",

    r"–∫—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞",
    r"–º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ",
    r"—Ä–∞–±–æ—Ç–∞–µ–º –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ",
    r"–ø–ª–∞—á—É –Ω–∞–ª–æ–º –∑–∞ —Ç–µ–∑–µ—Ä",
    r"f-1",
    r"—è–∑—ã–∫–æ–≤—ã–µ –∫—É—Ä—Å—ã",
    r"–∑a—Äa–±o—Ço–∫ —É–¥a–ª–µ–Ω–Ωo",
    r"–ø–æ–∫—É–ø–∞—é usdt –∏ usdc",

    r"–ø–∏—à–∏ ‚Äî –≤—Å—ë –æ–±—Å—É–¥–∏–º",
    r"–ø—Ä–æ–¥–∞–∂–∞ ‚Äî –ø–æ –ª—É—á—à–µ–º—É –∫—É—Ä—Å—É",
    r"–ü—Ä–∏–Ω–∏–º–∞–µ–º usdt",
    r"—Å—Ç–æ–ª –Ω–∞ —Å—Ç–æ–ª",
    r"–Ω—É–∂–µ–Ω –æ–±–º–µ–Ω",
    r"—Ä–∞–±–æ—Ç–∞–µ–º –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ",
    r"—Å–∞–ø–±–æ—Ä–¥",
    r"—Å–∞–ø –±–æ—Ä–¥",
    r"–ø–ª–∞—á—É –Ω–∞–ª–æ–º –∑–∞ —Ç–µ–∑–µ—Ä",
    r"–≤—Å—Ç—Ä–µ—á—É—Å—å –ª–∏—á–Ω–æ",
    r"–∫—É—Ä—Å –ø—Ä–∏—è—Ç–Ω—ã–π",

    r"—Å–∫—É–ø–∞—é",
    r"–Ω—É–∂–µ–Ω –æ–±–º–µ–Ω",
    r"–Ω—É–∂–µ–Ω —é—Å–¥—Ç",
    r"–∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä",
    r"–∑–æ–ª–æ—Ç–∞—è –∫–æ—Ä–æ–Ω–∞",
    r"–≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å",
    r"–∞—Ä–µ–Ω–¥–∞",
    r"—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤\w*\b",
    r"—Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞",

    r"—Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑–µ—Ü",
    r"–ª—É—á—à–∏–µ —Ü–µ–Ω—ã",
    r"—Ä–∞–±–æ—Ç–∞—é —á–µ—Å—Ç–Ω–æ",
)


@client.on(events.NewMessage)
async def listen_any_message(event):
    asyncio.create_task(process_event(event))


async def process_event(event):
    text = event.raw_text.lower()
    # async for dialog in client.iter_dialogs():
    #     print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {dialog.name} | ID: {dialog.id} | –¢–∏–ø: {type(dialog.entity)}")
    # msg = event.message

    if not event.sender or event.sender.bot:
        return

    chat_to = '@test_userbot22'

    for pattern_word, pattern in PATTERNS.items():
        try:
            # print(f'–ø—Ä–æ–≤–µ—Ä—è—é {pattern_word}...')
            if re.search(pattern, text):
                # black list words
                if any(re.search(black_pattern, text) for black_pattern in BLACK_LIST_PATTERNS):
                    print('black pattern!')
                    return
                # print('—É—Å–ø–µ—à–Ω–æ')

                user_data = event.sender

            # print('user', user_data)
                chat: types.Channel = event.chat

                print('chat', chat.__dict__)

                chat_username = chat.username
                chat_name = chat.title

                try:
                    reply_to = event.message.reply_to
                    # print('REPLY TO ', reply_to)
                    topic_id = reply_to.reply_to_top_id

                    if topic_id is None:
                        raise Exception()
                    
                except Exception as ex:
                    print(ex)
                    try:
                        topic_id = reply_to.reply_to_msg_id
                    except Exception as ex:
                        print(ex)
                        topic_id = None

            # print('topic_id',topic_id)

                message_date = event.date + timedelta(hours=3)

                name = None

                if user_data:
                    username = user_data.username
                    first_name = user_data.first_name
                    last_name = user_data.last_name

                    name = username or first_name or last_name or f'–ò–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, id {user_data.id}'

                if name is None:
                    name = f'–ò–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

                print(f'***\n–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {chat_name}\n\n–í—Ä–µ–º—è: {datetime.now(tz=moscow_tizone)}\n***\n')

                user_id_link = f'tg://user?id={user_data.id}'

                _text = f'üîî –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ <a href="https://t.me/{chat_username}">{chat_name}</a>\n\n–ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É: {pattern_word}\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n<pre>\n{event.raw_text}</pre>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {name}\n–í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è: {message_date.strftime("%d.%m.%Y %H:%M")}\n\n–°—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n- –ø–æ id: {user_id_link}'
                
                if user_data.username:
                    username_link = f'https://t.me/{user_data.username}'
                    _text += f'\n- –ø–æ username: {username_link}'

                if topic_id:
                    url = f"https://t.me/{chat_username}/{topic_id}/{event.message.id}"
                else:
                    url = f"https://t.me/{chat_username}/{event.message.id}"

                _text += f'\n\n<a href="{url}"><b>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</b></a>'

                await client.send_message(chat_to,
                                        _text,
                                        parse_mode='HTML',
                                        link_preview=False)
                break
        except Exception as ex:
            print(ex)
            continue


client.start()

print('--- START USER BOT...')

client.run_until_disconnected()
